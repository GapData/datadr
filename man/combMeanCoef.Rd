% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recombine_combine.R
\name{combMeanCoef}
\alias{combMeanCoef}
\title{Mean Coefficient Recombination}
\usage{
recombine(distributed_data_object, combine = combMeanCoef, ...)
}
\description{
Mean coefficient recombination -- Calculate the mean of parameter estimates for a model fit to each subset
}
\details{
\code{combMeanCoef} is passed to the argument \code{combine} in \code{\link{recombine}}

This method is designed to calculate the mean of each model coefficient, where the same model has been fit to
subsets via a transformation.  In particular, \code{\link{drLM}} and \code{\link{drGLM}} functions should be
used to add the transformation to the ddo that will be recombined using \code{combMeanCoef}.
}
\examples{
# Create a distributed data frame using the iris data set
bySpecies <- divide(iris, by = "Species")

# Fit a linear model of Sepal.Length vs. Sepal.Width for each species
# using 'drLM()' (or we could have used 'drGLM()' for a generlized linear model)
lmTrans <- function(x) drLM(Sepal.Length ~ Sepal.Width, data = x)
bySpeciesFit <- addTransform(bySpecies, lmTrans)

# Average the coefficients from the linear model fits of each species
out1 <- recombine(bySpeciesFit, combine = combMeanCoef)
out1

# Alternatively, we could acheive the same result using "combMean"
# with a different tranformation function
lmTrans2 <- function(x) coef(lm(Sepal.Length ~ Sepal.Width, data = x))
out2 <- recombine(addTransform(bySpecies, lmTrans2), combine = combMean)
out2

# These are the same
all.equal(out1, out2)

}
\author{
Ryan Hafen
}
\seealso{
\code{\link{divide}}, \code{\link{recombine}}, \code{\link{rrDiv}}, \code{\link{combCollect}}, \code{\link{combDdo}}, \code{\link{combRbind}}, \code{\link{combMean}}
}

